-------- [mk_bool_var] mk_bool_var ../src/smt/smt_internalizer.cpp:926 ---------
creating boolean variable: 0 for:
true 1
------------------------------------------------
-------- [begin_assert_expr] assert_expr_core ../src/smt/smt_context.cpp:3024 ---------
(let ((a!1 (or (not (> (+ x 1) 0)) (not (< x 0))))
      (a!2 (or (> (+ x y) 0) (not (> (+ x y) 4)))))
  (and (or (> (+ x 1) 0) (> (+ x y) 0))
       (or (< x 0) (> (+ x y) 4))
       (not (> (+ x y) 0))
       a!1
       a!2)) null
------------------------------------------------
-------- [begin_assert_expr_ll] assert_expr_core ../src/smt/smt_context.cpp:3025 ---------
#11 := (+ x y)
#16 := (> #11 4)
#22 := (not #16)
#12 := (> #11 0)
#23 := (or #12 #22)
#14 := (< x 0)
#20 := (not #14)
#7 := (+ x 1)
#9 := (> #7 0)
#19 := (not #9)
#21 := (or #19 #20)
#18 := (not #12)
#17 := (or #14 #16)
#13 := (or #9 #12)
#24 := (and #13 #17 #18 #21 #23)
(and #24)

------------------------------------------------
-------- [end_assert_expr_ll] assert_expr_core ../src/smt/smt_context.cpp:3032 ---------
#8 := 0
#10 := y
#5 := x
#11 := (+ x y)
#49 := (<= #11 0)
#50 := (not #49)
#46 := -1
#47 := (<= x -1)
#48 := (not #47)
#51 := (or #48 #50)
#15 := 4
#56 := (<= #11 4)
#57 := (not #56)
#55 := (>= x 0)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
------------------------------------------------
-------- [internalize] operator() ../src/smt/smt_setup.cpp:53 ---------
setup 0x5fd47b42a020
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 5
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#6 1 v0 th: 5
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#62 1.0 v1 th: 5
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#8 0 v2 th: 5
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#63 0.0 v3 th: 5
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 8
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 7
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 9
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 10
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 11
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 13
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 12
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 14
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 16
------------------------------------------------
-------- [internalize] register_plugin ../src/smt/smt_context.cpp:2883 ---------
0x5fd47b42a020 15
------------------------------------------------
-------- [internalize_assertions] internalize_assertions ../src/smt/smt_context.cpp:3211 ---------
internalize_assertions()...
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(not (<= x (- 1)))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= x (- 1))
------------------------------------------------
-------- [mk_bool_var] mk_bool_var ../src/smt/smt_internalizer.cpp:926 ---------
creating boolean variable: 1 for:
(<= x (- 1)) 47
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
x
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#5 x v4 th: 5
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(not (<= (+ x y) 0))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= (+ x y) 0)
------------------------------------------------
-------- [mk_bool_var] mk_bool_var ../src/smt/smt_internalizer.cpp:926 ---------
creating boolean variable: 2 for:
(<= (+ x y) 0) 49
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
y
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#10 y v5 th: 5
------------------------------------------------
-------- [push_new_th_diseqs] push_new_th_diseqs ../src/smt/smt_context.cpp:1454 ---------
#11 (+ x y) v6 th: 5
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(or (not (<= x -1)) (not (<= #11 0))) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(or (not (<= x -1)) (not (<= #11 0)))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(not (>= x 0))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(>= x 0)
------------------------------------------------
-------- [mk_bool_var] mk_bool_var ../src/smt/smt_internalizer.cpp:926 ---------
creating boolean variable: 3 for:
(>= x 0) 55
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(not (<= (+ x y) 4))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= (+ x y) 4)
------------------------------------------------
-------- [mk_bool_var] mk_bool_var ../src/smt/smt_internalizer.cpp:926 ---------
creating boolean variable: 4 for:
(<= (+ x y) 4) 56
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(or (not (>= x 0)) (not (<= #11 4))) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(or (not (>= x 0)) (not (<= #11 4)))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= (+ x y) 0)
------------------------------------------------
-------- [assign_core] assign_core ../src/smt/smt_context.cpp:284 ---------
propagating: 2 (<= (+ x y) 0) 
relevant: 0 level: 0 is atom 1
justification -1: :
false 

------------------------------------------------
-------- [phase_selection] assign_core ../src/smt/smt_context.cpp:289 ---------
saving phase, is_pos: 1 l: 2
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(<= (+ x y) 0) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(<= (+ x y) 0)
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
0 0
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(+ x y) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(+ x y)
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
y 0
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
x 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
y
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
x
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= x (- 1))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(>= x 0)
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(or (<= x -1) (>= x 0)) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(or (<= x -1) (>= x 0))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(not (<= (+ x y) 0))
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= (+ x y) 0)
------------------------------------------------
-------- [internalize] internalize_rec ../src/smt/smt_internalizer.cpp:369 ---------
internalizing:
(<= (+ x y) 4)
------------------------------------------------
-------- [assign_core] assign_core ../src/smt/smt_context.cpp:284 ---------
propagating: 4 (<= (+ x y) 4) 
relevant: 0 level: 0 is atom 1
justification -1: 2:
(<= (+ x y) 0)

------------------------------------------------
-------- [phase_selection] assign_core ../src/smt/smt_context.cpp:289 ---------
saving phase, is_pos: 1 l: 4
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(or (not (<= #11 0)) (<= (+ x y) 4)) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(or (not (<= #11 0)) (<= (+ x y) 4))
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
(<= (+ x y) 4) 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
(<= (+ x y) 4)
------------------------------------------------
-------- [propagate_relevancy] relevant_eh ../src/smt/smt_context.cpp:1580 ---------
marking as relevant:
4 0
------------------------------------------------
-------- [propagate_relevancy] propagate ../src/smt/smt_relevancy.cpp:460 ---------
marking as relevant:
4
------------------------------------------------
-------- [internalize_assertions] internalize_assertions ../src/smt/smt_context.cpp:3240 ---------
after internalize_assertions()...
inconsistent: 0
------------------------------------------------
-------- [after_internalize_assertions] internalize_assertions ../src/smt/smt_context.cpp:3242 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
remaining case-splits:
#47 #55 
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
------------------------------------------------
-------- [unsat_core_bug] check ../src/smt/smt_context.cpp:3634 ---------

------------------------------------------------
-------- [unsat_core_bug] reset_assumptions ../src/smt/smt_context.cpp:3380 ---------
reset 
------------------------------------------------
-------- [after_internalization] init_assumptions ../src/smt/smt_context.cpp:3376 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
remaining case-splits:
#47 #55 
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
------------------------------------------------
-------- [before_search] check ../src/smt/smt_context.cpp:3639 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
remaining case-splits:
#47 #55 
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
------------------------------------------------
-------- [search] search ../src/smt/smt_context.cpp:3750 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
remaining case-splits:
#47 #55 
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
#1  ->  #1, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#2  ->  #2, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#6  ->  #6, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#62  ->  #62, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#8  ->  #8, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#63  ->  #63, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#5  ->  #5, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#10  ->  #10, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
#11  ->  #11, lbls: {}, plbls: {}, root->lbls: {}, root->plbls: {}
------------------------------------------------
-------- [search_detail] search ../src/smt/smt_context.cpp:3751 ---------
asserted formulas:
(or (not (<= x (- 1))) (not (<= (+ x y) 0)))
(or (not (>= x 0)) (not (<= (+ x y) 4)))
(<= (+ x y) 0)
(or (<= x (- 1)) (>= x 0))
(or (not (<= (+ x y) 0)) (<= (+ x y) 4))
inconsistent: 0
------------------------------------------------
-------- [literal_occ] init_search ../src/smt/smt_context.cpp:3699 ---------
------------------------------------------------
-------- [after_init_search] search ../src/smt/smt_context.cpp:3754 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 0
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
remaining case-splits:
#47 #55 
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
------------------------------------------------
-------- [search_lite] search ../src/smt/smt_context.cpp:3757 ---------
searching...
------------------------------------------------
-------- [bounded_search] bounded_search ../src/smt/smt_context.cpp:3873 ---------
starting bounded search...
------------------------------------------------
-------- [propagate] propagate ../src/smt/smt_context.cpp:1696 ---------
propagating... 0:2
------------------------------------------------
-------- [assign_core] assign_core ../src/smt/smt_context.cpp:284 ---------
propagating: -1 (not (<= x (- 1))) 
relevant: 0 level: 0 is atom 1
bin 2
------------------------------------------------
-------- [phase_selection] assign_core ../src/smt/smt_context.cpp:289 ---------
saving phase, is_pos: 0 l: -1
------------------------------------------------
-------- [assign_core] assign_core ../src/smt/smt_context.cpp:284 ---------
propagating: -3 (not (>= x 0)) 
relevant: 0 level: 0 is atom 1
bin 4
------------------------------------------------
-------- [phase_selection] assign_core ../src/smt/smt_context.cpp:289 ---------
saving phase, is_pos: 0 l: -3
------------------------------------------------
-------- [set_conflict] set_conflict ../src/smt/smt_context.cpp:1742 ---------
0 (not (>= x 0)) bin -1
------------------------------------------------
-------- [after_first_propagate] bounded_search ../src/smt/smt_context.cpp:3881 ---------
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 1
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
-1 (not #47) n : (not (<= x -1))
-3 (not #55) n : (not (>= x 0))
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
------------------------------------------------
-------- [forget_phase] forget_phase_of_vars_in_current_level ../src/smt/smt_context.cpp:4077 ---------
forgetting phase of l: 2
------------------------------------------------
-------- [forget_phase] forget_phase_of_vars_in_current_level ../src/smt/smt_context.cpp:4077 ---------
forgetting phase of l: 4
------------------------------------------------
-------- [forget_phase] forget_phase_of_vars_in_current_level ../src/smt/smt_context.cpp:4077 ---------
forgetting phase of l: -1
------------------------------------------------
-------- [forget_phase] forget_phase_of_vars_in_current_level ../src/smt/smt_context.cpp:4077 ---------
forgetting phase of l: -3
------------------------------------------------
-------- [search_bug] search ../src/smt/smt_context.cpp:3765 ---------
status: l_false, inconsistent: 1
------------------------------------------------
-------- [assigned_literals_per_lvl] search ../src/smt/smt_context.cpp:3766 ---------
[4], num_assigned: 4
------------------------------------------------
-------- [guessed_literals] search ../src/smt/smt_context.cpp:3774 ---------

------------------------------------------------
-------- [after_search] check_finalize ../src/smt/smt_context.cpp:3461 ---------
result: l_false
Logical context:
scope-lvl: 0
base-lvl:  0
search-lvl:  0
inconsistent(): 1
m_asserted_formulas.inconsistent(): 0
0 #1 := true
1 #46 := -1
#5 := x
#47 := (<= x -1)
2 #8 := 0
#10 := y
#11 := (+ x y)
#49 := (<= #11 0)
3 #55 := (>= x 0)
4 #15 := 4
#56 := (<= #11 4)
#2 := false
#6 := 1
#62 := 1.0
#63 := 0.0
#50 := (not #49)
#48 := (not #47)
#51 := (or #48 #50)
#57 := (not #56)
#54 := (not #55)
#58 := (or #54 #57)
#59 := (or #47 #55)
#60 := (or #50 #56)
asserted formulas:
#51 #58 #49 #59 #60 
(-1 -2)
(1 3)
(-3 -4)
current assignment:
2 #49: (<= (+ x y) 0)
4 #56: (<= (+ x y) 4)
-1 (not #47) n : (not (<= x -1))
-3 (not #55) n : (not (>= x 0))
equivalence classes: 9
#1: true
#2: false
#6: 1
#62: 1.0
#8: 0
#63: 0.0
#5: x
#10: y
#11: (+ x y)
expression -> bool_var:
(#1 -> 0) (#47 -> 1) (#49 -> 2) (#55 -> 3) (#56 -> 4) 
relevant exprs:
#51 #58 #49 #8 #11 #10 #5 #59 #60 #56 #15 
Theory arithmetic:
number of constraints = 16
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
j4 + j5
 -  j4 -  j5 +  _t6 = 0

inf columns: none
[0]    := (0, 0)               [(1, 0), (1, 0)]
[1]    := (0, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (0, 0)               [-oo, oo]
[5]    := (0, 0)               [-oo, oo]
[6]    := (0, 0) base          [-oo, oo]
j4 + j5
irr: v0 j0, int := 6: 1
irr: v1 j1 := 62: 1.0
v2 j2, int := 8: 0
irr: v3 j3 := 63: 0.0
v4 j4, int := 5: x
v5 j5, int := 10: y
v6 t6, int := 11: (+ x y)
recfun
disabled guards:

enabled guards:

decl2enodes:
id 25 -> #11
hot bool vars:
case splits
------------------------------------------------
-------- [flush] flush ../src/smt/smt_context.cpp:3000 ---------
m_scope_lvl: 0
------------------------------------------------
